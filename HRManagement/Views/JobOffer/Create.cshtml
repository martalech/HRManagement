@model HRManagement.Models.JobOfferCreate

@{
    ViewData["Title"] = "Create";
}

@section Scripts{
    <script>
        function fetchData() {
            var isvalid = true;
            if (document.getElementById('jobtitle').value == "") {
                alert("No job title");
                isvalid = false;
            }
            if (document.getElementById('description').value == "") {
                alert("No description");
                isvalid = false;
            }
            if (document.getElementById('location').value == "") {
                alert("No location");
                isvalid = false;
            }
            if (document.getElementById('salary').value < 0) {
                alert("Salary cannot be negative");
                isvalid = false;
            }
            if (document.getElementById('contracttype').value == "") {
                alert("No contract type");
                isvalid = false;
            }
            if (isvalid == false)
                return;
            $.ajax({
                url: '/JobOffer/Create',
                type: 'post',
                data: $('#form').serialize(),
                success: function (data) {
                    console.log(data);
                },
                error: function (data) {
                    alert('Error! Please try again.');
                    console.log(data);
                }
            }).done(function () {
            });
        }
    </script>
}

<div class="row page-box">
    <div class="col-sm-12">
        <h2>Now Job Offer</h2>
        @*@using (Html.BeginForm("Create", "JobOffer", new { htmlAttributes = new { @id = "form" } }))
            {*@
        <form id="form">
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(m => m.JobTitle)
                @Html.EditorFor(m => m.JobTitle, new { htmlAttributes = new { @id = "jobtitle", @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.JobTitle, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.DropDownListFor(m => Model.CompanyName.Id, new SelectList(ViewBag.Companies, "Id", "Name"),
                    "Choose a company", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CompanyName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Location)
                @Html.EditorFor(m => m.Location, new { htmlAttributes = new { @id = "location", @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Location, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Salary, "Salary")
                <div class="input-group">
                    <span class="input-group-addon">PLN</span>
                    @Html.EditorFor(m => m.Salary, new { htmlAttributes = new { @id = "salary", @class = "form-control", placeholder = "Salary" } })
                    <span class="input-group-addon">.00</span>
                </div>
                @Html.ValidationMessageFor(m => m.Salary, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { @id = "description", @class = "form-control", placeholder = "Enter description" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ContractType)
                @Html.EditorFor(m => m.ContractType, new { htmlAttributes = new { @id = "contracttype", @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ContractType, "", new { @class = "text-danger" })
            </div>
            <button onclick="fetchData()" class="btn btn-rounded btn-primary mx-2">Create</button>
            @*  }*@
        </form>
    </div>
</div>