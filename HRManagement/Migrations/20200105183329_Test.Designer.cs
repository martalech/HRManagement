// <auto-generated />
using HRManagement.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HRManagement.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200105183329_Test")]
    partial class Test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HRManagement.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Marta Company"
                        });
                });

            modelBuilder.Entity("HRManagement.Models.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ContactAgreement");

                    b.Property<string>("CvUrl")
                        .IsRequired();

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<int>("JobOfferId");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("JobOfferId");

                    b.ToTable("JobApplications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactAgreement = false,
                            CvUrl = "https://ale.com",
                            EmailAddress = "a@b.c",
                            FirstName = "Marta",
                            JobOfferId = 1,
                            LastName = "Elo",
                            PhoneNumber = "1421412"
                        });
                });

            modelBuilder.Entity("HRManagement.Models.JobOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyNameId");

                    b.Property<string>("ContractType");

                    b.Property<string>("Description");

                    b.Property<string>("JobTitle");

                    b.Property<string>("Location");

                    b.Property<int>("Salary");

                    b.HasKey("Id");

                    b.HasIndex("CompanyNameId");

                    b.ToTable("JobOffers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyNameId = 1,
                            ContractType = "fullt-ime",
                            Description = "elo",
                            JobTitle = "dentist",
                            Location = "Warsaw",
                            Salary = 10
                        });
                });

            modelBuilder.Entity("HRManagement.Models.JobApplication", b =>
                {
                    b.HasOne("HRManagement.Models.JobOffer")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobOfferId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRManagement.Models.JobOffer", b =>
                {
                    b.HasOne("HRManagement.Models.Company", "CompanyName")
                        .WithMany()
                        .HasForeignKey("CompanyNameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
